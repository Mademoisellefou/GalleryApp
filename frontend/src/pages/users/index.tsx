import React, { useEffect, useState } from "react";
import Head from "next/head";
import axios from "axios";
import Table from "@/components/Table";
type User = {
  id: string;
  name: string;
};
type Photo = {
  id: string;
  url: string;
};
function Index() {
  const [profiles, setProfiles] = useState<User[]>();
  const [valuePhoto, setValuePhoto] = useState<string>("");
  const [photos, setPhotos] = useState<Photo[]>([]);
  const allUsers = async () => {
    const res = await axios.get(
      `${process.env.NEXT_PUBLIC_HOST}:${process.env.NEXT_PUBLIC_PORT}/profile`
    );
    setProfiles(res.data);
  };
  const allPhotos = async () => {
    const res = await axios.get(
      `${process.env.NEXT_PUBLIC_HOST}:${process.env.NEXT_PUBLIC_PORT}/photo`
    );
    setPhotos(res.data);
  };

  const onSelectPhoto = (event: React.ChangeEvent<HTMLSelectElement>) => {
    // console.log("User Selected the Photo - ", event.target.value);
    setValuePhoto(event.target.value);
  };
  const Asignar = (id: string) => {
    AsignPhoto(id);
  };
  const AsignPhoto = async (id: string) => {
    const res = await axios({
      method: "put",
      url: `${process.env.NEXT_PUBLIC_HOST}:${process.env.NEXT_PUBLIC_PORT}/photo/asign/${id}`,
      data: {
        photoId: valuePhoto,
      },
    });
  };
  useEffect(() => {
    allUsers();
    allPhotos();
  }, []);
  return (
    <>
      <Head>
        <title>Users</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container">
        <table className="table">
          <thead>
            <tr>
              <th scope="col">usuario</th>
              <th scope="col">asignar</th>
            </tr>
          </thead>
          <tbody>
            {profiles?.map((profile, index) => (
              <tr key={index}>
                <td>{profile.name}</td>
                <td className="asignar">
                  <select onChange={onSelectPhoto}>
                    <option>Please choose one option</option>
                    {photos.map((photo, index) => {
                      return (
                        <option key={index} value={photo.id}>
                          {photo.url}
                        </option>
                      );
                    })}
                  </select>
                  <button
                    onClick={() => {
                      Asignar(profile.id);
                    }}
                  >
                    Asignar
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
        <hr>
        </hr>
        <br></br>
        <Table/>
      </main>
    </>
  );
}

export default Index;
