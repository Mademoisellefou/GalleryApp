import React, { useEffect, useState } from "react";
import Head from "next/head";
import axios from "axios";
import {
  Box,
  Button,
  Modal,
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableRow,
} from "@mui/material";
import TableContainer from "@mui/material/TableContainer";
type User = {
  id: string;
  name: string;
};
type Photo = {
  id: string;
  url: string;
};

const style = {
  position: "absolute" as "absolute",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)",
  width: 400,
  bgcolor: "background.paper",
  border: "2px solid #000",
  boxShadow: 24,
  p: 4,
};
function Index() {
  const [profiles, setProfiles] = useState<User[]>();
  const [valuePhoto, setValuePhoto] = useState<string>("");
  const [photos, setPhotos] = useState<Photo[]>([]);
  const allUsers = async () => {
    const res = await axios.get(
      `${process.env.NEXT_PUBLIC_HOST}:${process.env.NEXT_PUBLIC_PORT}/profile`
    );
    setProfiles(res.data);
  };
  const allPhotos = async () => {
    const res = await axios.get(
      `${process.env.NEXT_PUBLIC_HOST}:${process.env.NEXT_PUBLIC_PORT}/photo`
    );
    setPhotos(res.data);
  };

  const onSelectPhoto = (event: React.ChangeEvent<HTMLSelectElement>) => {
    // console.log("User Selected the Photo - ", event.target.value);
    setValuePhoto(event.target.value);
  };
  const Asignar = (id: string, idAuto: string) => {
    AsignPhoto(id, idAuto);
  };
  const AsignPhoto = async (id: string, idAuto: string) => {
    console.log(`el id del Profile es ${id} id auto es ${idAuto}`);
    const res = await axios({
      method: "put",
      url: `${process.env.NEXT_PUBLIC_HOST}:${process.env.NEXT_PUBLIC_PORT}/photo/asign/${id}`,
      data: {
        photoId: idAuto,
      },
    });
  };
  const [currentProfile, setCurrentProfile] = useState<string>("");
  const [open, setOpen] = React.useState<boolean>(false);
  const handleOpen = (id: string) => {
    setCurrentProfile(id);
    setOpen(true);
  };
  const handleClose = () => setOpen(false);
  useEffect(() => {
    allUsers();
    allPhotos();
  }, []);
  return (
    <>
      <Head>
        <title>Users</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container">
      <TableContainer>
            <Table sx={{ minWidth: 650 }}>
              <TableHead>
                <TableRow>
                  <TableCell>usuario</TableCell>
                  <TableCell>asignar</TableCell>
                </TableRow>
                </TableHead>
          <TableBody>
            {profiles?.map((profile, index) => (
              <TableRow key={index}>
                <TableCell>{profile.name}</TableCell>
                <TableCell className="asignar">
                  <Button
                    color="primary"
                    variant="contained"
                    onClick={() => handleOpen(profile.id)}
                  >
                    Asignar
                  </Button>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
          </Table>
        </TableContainer>
        <hr></hr>
        <br></br>
      </main>
      <Modal
        open={open}
        aria-labelledby="modal-modal-title"
        aria-describedby="modal-modal-description"
      >
        <Box sx={style}>
          <TableContainer>
            <Table sx={{ minWidth: 650 }}>
              <TableHead>
                <TableRow>
                  <TableCell scope="col">auto</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {photos?.map((photo, index) => (
                  <TableRow
                    onClick={() => {
                      Asignar(currentProfile, photo.id);
                    }}
                    key={index}
                  >
                    <TableCell>{photo.url}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
          <Button onClick={handleClose}>Asignar</Button>
          <hr></hr>
          <br></br>
        </Box>
      </Modal>
    </>
  );
}

export default Index;
